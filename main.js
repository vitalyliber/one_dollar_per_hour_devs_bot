const updateUserAvatar = require("./api/updateUserAvatar");
const createOrUpdateUser = require("./api/createOrUpdateUser");
const updateMainPage = require("./api/updateMainPage");
const getProfile = require("./api/getProfile");

require("dotenv").config();
const Telegraf = require("telegraf");
const session = require("telegraf/session");

const baseUrl = "https://juniors.casply.com";
const helpText =
  "üîÜ –ù–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞ /start\n‚úÖ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—é–º–µ –≤ –ø–æ–∏—Å–∫–µ /show\nü§≥ –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ —á–∞—Ç\n‚ùå –£–±—Ä–∞—Ç—å —Ä–µ–∑—é–º–µ –∏–∑ –ø–æ–∏—Å–∫–∞ /hide\n";

const bot = new Telegraf(process.env.BOT_TOKEN);
bot.use(session());
bot.start((ctx) => {
  session.step = "username";
  ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç –¥–∂—É–Ω–∏–æ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫!\n–ù–µ—Ç –æ–ø—ã—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏? ü•∫\n–ù–æ –µ—Å—Ç—å —Å–∏–ª—å–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ –ø—Ä–æ–∫–∞—á–∞—Ç—å—Å—è?ü§ì\n–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∏ –ø–æ–ª—É—á–∏ —à–∞–Ω—Å –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –∑–∞ 1 –¥–æ–ª–ª–∞—Ä –≤ —á–∞—Å üíµ\n\n–í–≤–µ–¥–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –¥–ª—è —Ä–µ–∑—é–º–µ (1/3 —à–∞–≥–æ–≤ | /stop —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å)"
  );
});
bot.help((ctx) => ctx.reply(helpText));
bot.command("hide", async (ctx) => {
  const data = {
    junior_user: {
      telegram_id: ctx.message.from.id,
      active: false,
    },
  };
  createOrUpdateUser(data);
  ctx.reply(`–ü—Ä–æ—Ñ–∏–ª—å –±—ã–ª —Å–∫—Ä—ã—Ç ${baseUrl}`);
  updateMainPage();
});
bot.command("show", async (ctx) => {
  const profile = await getProfile({ telegram_id: ctx.message.from.id });
  if (!profile.image) {
    return ctx.reply(`–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å`);
  }
  const data = {
    junior_user: {
      telegram_id: ctx.message.from.id,
      active: true,
    },
  };
  createOrUpdateUser(data);
  ctx.reply(`–ü—Ä–æ—Ñ–∏–ª—å –±—ã–ª –æ—Ç–∫—Ä—ã—Ç ${baseUrl}`);
  updateMainPage();
});
bot.on("photo", (ctx) => {
  console.log(ctx.message);
  const file_id = ctx.message.photo[ctx.message.photo.length - 1].file_id;
  updateUserAvatar({
    file_id,
    junior_user: {
      telegram_id: ctx.message.from.id,
      active: true,
    },
  });
  if (session.step === "photo") {
    session.step = null;
    ctx.reply(`–ü—Ä–æ—Ñ–∏–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üíñ ${baseUrl}\n/help`);
  } else {
    ctx.reply(`–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ! üíà ${baseUrl}\n/help`);
  }
  updateMainPage();
});
bot.on("text", async (ctx) => {
  console.log(ctx.message);
  if (ctx.message.text === "/stop") {
    session.step = null;
    return ctx.reply("–†–∞–±–æ—Ç–∞ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ!");
  }
  if (session.step === "username") {
    if (ctx.message.text.length > 6) {
      // update username
      session.username = ctx.message.text;
      session.step = "stack";
      return ctx.reply(
        "–í–≤–µ–¥–∏ —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –≤–ª–∞–¥–µ–µ—Ç–µ (2/3 —à–∞–≥–æ–≤ | /stop —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å)"
      );
    } else {
      return ctx.reply("–ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–Ω–æ–≤–∞");
    }
  }
  if (session.step === "stack") {
    if (ctx.message.text.length > 6) {
      // update stack
      session.stack = ctx.message.text;
      session.step = "experience";
      return ctx.reply(
        "–†–∞—Å—Å–∫–∞–∂–∏ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏/–∏–ª–∏ –æ –∫—É—Ä—Å–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø—Ä–æ—à–µ–ª (3/3 —à–∞–≥–æ–≤ | /stop —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å)"
      );
    } else {
      return ctx.reply("–ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π —Å–Ω–æ–≤–∞");
    }
  }
  if (session.step === "experience") {
    if (ctx.message.text.length > 6) {
      // update server data
      const data = {
        junior_user: {
          telegram_id: ctx.message.from.id,
          username: session.username,
          stack: session.stack,
          experience: ctx.message.text,
        },
      };
      createOrUpdateUser(data);
      session.step = "photo";
      const profile = await getProfile({ telegram_id: ctx.message.from.id });
      if (profile.image) {
        return ctx.reply(`–§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ\n ${baseUrl}`);
      } else {
        return ctx.reply(
          "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n–ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ –≤ —á–∞—Ç.\n/help"
        );
      }
    } else {
      return ctx.reply("–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–ø—ã—Ç–µ/–∫—É—Ä—Å–∞—Ö —Å–Ω–æ–≤–∞");
    }
  }
  if (!session.step) {
    return ctx.reply(helpText);
  }
});
bot.launch();
